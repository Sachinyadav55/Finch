%\VignetteEngine{knitr::knitr}
\documentclass{article}


%%%%%%%%%%%%%%%%
%%% Preamble %%%
%%%%%%%%%%%%%%%%

%%% Title %%%
\newcommand{\thetitle}{Finch: Pairwise distance base on kmer strategy}

%%% Packages %%%
\usepackage{whbiocvignette}
\usepackage[numbers]{natbib}

%%% Title Material %%%
\title{}
\title{\textsf{\textbf{\thetitle}}}

\author{
	Cai Huang\\[1em]Georgia Instutute of Technology,\\ Atlanta, GA, USA\\ \texttt{chuang95@gatech.edu}
	\and
	Fredrik O. Vannberg\\[1em]Georgia Instutute of Technology,\\ Atlanta, GA, USA\\ \texttt{fredrik.vannberg@biology.gatech.edu}
}


%%%%%%%%%%%%%%%%
%%% Document %%%
%%%%%%%%%%%%%%%%

\begin{document}

<<include=FALSE, eval=TRUE>>=
library(knitr)
opts_chunk$set(dev=c('postscript'))
@ %def

%%% Title %%%
\maketitle


%%%%%%%%%%%%%%%%
%%% Abstract %%%
%%%%%%%%%%%%%%%%
\abstract

To date the comparison of genomic DNA sequences have routinely utilized shorter conserved regions for comparative genomics. Current phylogenetic analysis therefore can create divergent results based on which genetic loci are utilized for this analysis. Sequence similarity is also commonly determined by first carrying out gap penalty pairwise alignments for a set of sequences, and the similarity is quantified based upon this alignment. This approach, however, has limitations and is primarily utilized to compare relatively conserved sequences and is also de- pendent upon the algorithm utilized to create the alignment. From first principles we here develop a framework for encoding nucleic acid sequences into fixed length sections (k-mers) which we utilize to create an invariant pairwise distance of total information content of genome sequences. Here we provide a R package which has two kmer base algorithms to compute the pairwise comparison of genomic DNA sequence. First function is Boolean analysis by using XOR discrete function, second function is linear algebra analysis by using hierarchical PCA.


%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Table of contents %%%
%%%%%%%%%%%%%%%%%%%%%%%%%
\tableofcontents


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% Loading the R package %%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\section{Loading the R package}
\label{sec.loading}

First, download and install the \Rpackage{Finch} R package. Launch R and load the package.

<<load_package, eval=TRUE, echo=TRUE>>=
require(Matrix)
library(Finch)
@

The examples in this document are integer kc files generated by using Kanalyze\cite{Audano:2014aa} with following command.
\[{\rm{ls *fna | xargs  - I one java  - jar kanalyze.jar count  - k 8  - o one\_8.kc  - f fasta  - p kanalyze.outfmt = int  - r one}}\]

The kc files contents kmer and counts for each genome sequence. In our test data set, there are 6 kc files generated from 6 virus genome sequences, and we choose kmer length equal to 8

%%%%%%%%%%%%%%%%%%%%%%%%
%%% Finch by xor %%%
%%%%%%%%%%%%%%%%%%%%%%%%
\section{Compute pairwise distance by using XOR}
\label{Finch.dif}

The first function \Rfunction{Finch.dif} compute pairwise distance of kmer data by using XOR discrete function, and we call it boolean analysis. We can call this function.

<<Finch.dif_function, eval=TRUE, echo=TRUE>>=
x <- Finch.dif(8,"../../Finch/data") #kmer.length = 8, path.to.data to data folder
@

The \texttt{x} return value is a distance matrix. Each column and row represents one virus genome. We can check the distance matrix.

<<Finch.dif_result, eval=TRUE, echo=TRUE>>=
names(x)
names(x) <- c(1:6)
x
@

First 3 virus are \emph{Mycobacterium.phage} and last 3 are \emph{Staphylococcus.phage}. From the matrix, we see the pairwise distance among first 3 genomes and last 3 genomes are lower than the pairwise distance across the them. Base on this, we can clearly cluster them to two family.\\


%%%%%%%%%%%%%%%%%%%%%%%%
%%% Finch by hPCA %%%
%%%%%%%%%%%%%%%%%%%%%%%%
\section{Compute pairwise distance by using hierarchical PCA}
\label{Finch.hpca}

The second function. \Rfunction{Finch.hpca} compute the pairwise distance of kmer data by using hierarchical PCA, and we call it linear algebra analysis. We can call this function.

<<Finch.hpca_function, eval=TRUE, echo=TRUE>>=
y <- Finch.hpca(8,"../../Finch/data") #kmer.length = 8, path.to.data to data folder
@

This function also  returns \texttt{y} value as a distance matrix. Each column and row represents one virus genome. We can check the distance matrix.

<<Finch.hpca_result, eval=TRUE, echo=TRUE>>=
names(y)
names(y) <- c(1:6)
y
@

Similarly, we see the pairwise distance are clearly separating the two group of viruses.\\


%%%%%%%%%%%%%%%%%%%%%%%%
%%% compare the result%%%
%%%%%%%%%%%%%%%%%%%%%%%%
\section{Compare the results generated by XOR and hierarchical PCA}
\label{Finch.dif}

Further more, we plot the \texttt{x} and \texttt{y} pairwise distance matrix together, and show the nice correlation between our two algorithm.

<<plot_result, eval=TRUE, echo=TRUE>>=
#prepare the result as vector
x=as.vector(data.matrix(x))
y=as.vector(data.matrix(y))
#log transfer data 
x[x>0]=-log(x[x>0])
y[y>0]=-log(y[y>0])
#fit a linear regression model to show the correlation between x and y 
reg=lm(x~y)
plot(x, y,xlab="Boolean analysis",ylab="hierarchical PCA")
title(main="Boolean analysis compare with hierarchical PCA", col.main="black", font.main=4)
abline(reg)
#show the coefficient of determination
summary(reg)$r.squared 
@

From the plot we can see the linear regression model shows a good correlation between our two function with 0.8295 R squared score  . Also the dots are located to two separate parts of the plot, which give us the evidence of two clusters among the genome data.


%%%%%%%%%%%%%%%%%%%%
%%% Session info %%%
%%%%%%%%%%%%%%%%%%%%
\section{Session info}
\label{sec.sessioninfo}

<<sessioninfo>>=
sessionInfo()
@

%%%%%%%%%%%%%%%%%%%%
%%% Bibliography %%%
%%%%%%%%%%%%%%%%%%%%
\bibliographystyle{natbib}
\bibliography{Finch}

\end{document}
